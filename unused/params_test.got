package storage

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

var (
	knownTypes = []string{"gauge", "counter"}
)

func TestValidateType(t *testing.T) {
	{
		_t := &StorageParams{
			Type: "",
		}
		actual := _t.ValidateType()
		assert.NotNil(t, actual)
	}
	{
		_t := &StorageParams{
			Type: knownTypes[0],
		}
		actual := _t.ValidateType()
		assert.Nil(t, actual)
	}
	{
		_t := &StorageParams{
			Type: knownTypes[1],
		}
		actual := _t.ValidateType()
		assert.Nil(t, actual)
	}
}

func TestValidateName(t *testing.T) {
	{
		_t := &StorageParams{
			Name: "",
		}
		actual := _t.ValidateName()
		assert.NotNil(t, actual)
	}
	{
		_t := &StorageParams{
			Name: "t",
		}
		actual := _t.ValidateName()
		assert.Nil(t, actual)
	}
}

func TestValidateValue(t *testing.T) {
	{
		_t := &StorageParams{
			Type:  "gauge",
			Name:  "t",
			Value: "",
		}
		actual := _t.ValidateValue()
		assert.NotNil(t, actual)
	}
	{
		_t := &StorageParams{
			Type:  "gauge",
			Name:  "t",
			Value: "3.2",
		}
		actual := _t.ValidateValue()
		assert.Nil(t, actual)
	}
	{
		_t := &StorageParams{
			Type:  "counter",
			Name:  "t",
			Value: "",
		}
		actual := _t.ValidateValue()
		assert.NotNil(t, actual)
	}
	{
		_t := &StorageParams{
			Type:  "counter",
			Name:  "t",
			Value: "3",
		}
		actual := _t.ValidateValue()
		assert.Nil(t, actual)
	}
}
