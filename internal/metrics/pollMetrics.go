// Code generated by go generate; DO NOT EDIT.
package metrics

import (
	"github.com/mcrgnt/yp1/internal/storage"
	"github.com/mcrgnt/yp1/internal/common"
)

func pollMetrics(params *PollMetricsParams) {
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "Alloc",
		Value: float64(MemStats.Alloc),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "BuckHashSys",
		Value: float64(MemStats.BuckHashSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "Frees",
		Value: float64(MemStats.Frees),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "GCCPUFraction",
		Value: MemStats.GCCPUFraction,
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "GCSys",
		Value: float64(MemStats.GCSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "HeapAlloc",
		Value: float64(MemStats.HeapAlloc),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "HeapIdle",
		Value: float64(MemStats.HeapIdle),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "HeapInuse",
		Value: float64(MemStats.HeapInuse),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "HeapObjects",
		Value: float64(MemStats.HeapObjects),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "HeapReleased",
		Value: float64(MemStats.HeapReleased),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "HeapSys",
		Value: float64(MemStats.HeapSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "LastGC",
		Value: float64(MemStats.LastGC),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "Lookups",
		Value: float64(MemStats.Lookups),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "MCacheInuse",
		Value: float64(MemStats.MCacheInuse),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "MCacheSys",
		Value: float64(MemStats.MCacheSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "MSpanInuse",
		Value: float64(MemStats.MSpanInuse),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "MSpanSys",
		Value: float64(MemStats.MSpanSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "Mallocs",
		Value: float64(MemStats.Mallocs),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "NextGC",
		Value: float64(MemStats.NextGC),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "NumForcedGC",
		Value: float64(MemStats.NumForcedGC),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "NumGC",
		Value: float64(MemStats.NumGC),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "OtherSys",
		Value: float64(MemStats.OtherSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "PauseTotalNs",
		Value: float64(MemStats.PauseTotalNs),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "StackInuse",
		Value: float64(MemStats.StackInuse),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "StackSys",
		Value: float64(MemStats.StackSys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "Sys",
		Value: float64(MemStats.Sys),
	})
	_ = params.Storage.MetricSet(&storage.StorageParams{
		Type: common.MetricTypeGauge,
		Name: "TotalAlloc",
		Value: float64(MemStats.TotalAlloc),
	})
	
}
